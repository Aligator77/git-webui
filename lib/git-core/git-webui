#!/usr/bin/python

import codecs
import os
import posixpath
import shlex
import subprocess
import sys

if sys.version > '3':
    from http.server import SimpleHTTPRequestHandler, HTTPServer
    from urllib.parse import unquote
else:
    from SimpleHTTPServer import SimpleHTTPRequestHandler
    from BaseHTTPServer import HTTPServer
    from urllib import unquote




class WebUiRequestHandler(SimpleHTTPRequestHandler):

    WEB_ROOT = None
    REPO_ROOT = None

    @classmethod
    def setup_paths(cls, repo_root):
        web_root = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(sys.argv[0]))))
        web_root = os.path.join(web_root, "share", "git-webui", "webui")
        WebUiRequestHandler.WEB_ROOT = web_root
        WebUiRequestHandler.REPO_ROOT = repo_root


    def translate_path(self, path):
        if path.startswith("/repo"):
            root = WebUiRequestHandler.REPO_ROOT
            path = path[5:]
        else:
            root = WebUiRequestHandler.WEB_ROOT

        # abandon query parameters
        path = path.split('?',1)[0]
        path = path.split('#',1)[0]
        # Don't forget explicit trailing slash when normalizing. Issue17324
        trailing_slash = True if path.rstrip().endswith('/') else False
        path = posixpath.normpath(unquote(path))
        words = path.split('/')
        words = filter(None, words)
        path = root
        for word in words:
            drive, word = os.path.splitdrive(word)
            head, word = os.path.split(word)
            if word in (os.curdir, os.pardir): continue
            path = os.path.join(path, word)
        if trailing_slash:
            path += '/'
        return path


    def do_POST(self):
        if self.path == "/git":
            os.chdir(WebUiRequestHandler.REPO_ROOT)
            content_length = int(self.headers["Content-Length"])
            args = codecs.decode(self.rfile.read(content_length), "utf-8")
            cmd = shlex.split("git " + args)
            git = subprocess.Popen(cmd, stdout = subprocess.PIPE, stderr = subprocess.PIPE, cwd = WebUiRequestHandler.REPO_ROOT)
            stdout, stderr = git.communicate()
            if git.returncode == 0:
                http_status = 200
                result = stdout
            else:
                http_status = 500
                result = stderr
            self.send_response(http_status)
            self.send_header("Content-type", "text/plain")
            self.send_header("Content-Length", len(result))
            self.end_headers()
            self.wfile.write(result)
        else:
            self.send_error(404)




if __name__ == '__main__':
    repo_root = os.path.abspath(os.getcwd())
    while '.git' not in os.listdir(repo_root):
        new_root = os.path.dirname(repo_root)
        if new_root == repo_root:
            repo_root = None
            break
        else:
            repo_root = new_root
    if repo_root is None:
        print("No git repository found")
        sys.exit(1)
    WebUiRequestHandler.setup_paths(repo_root)

    port = 8000
    httpd = HTTPServer(("", port), WebUiRequestHandler)
    print("Serving at http://localhost:{}/".format(port))
    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        httpd.server_close()
        sys.exit(0)
