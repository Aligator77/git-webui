#!/usr/bin/python

import codecs
import os
import sys
import shlex
import subprocess

if sys.version > '3':
    from http.server import SimpleHTTPRequestHandler, HTTPServer
else:
    from SimpleHTTPServer import SimpleHTTPRequestHandler
    from BaseHTTPServer import HTTPServer




class WebUiRequestHandler(SimpleHTTPRequestHandler):

    WEB_ROOT = None
    REPO_ROOT = None

    def do_HEAD(self):
        self.do_GET_or_HEAD(SimpleHTTPRequestHandler.do_HEAD)


    def do_GET(self):
        self.do_GET_or_HEAD(SimpleHTTPRequestHandler.do_GET)


    def do_GET_or_HEAD(self, handler):
        if self.path.startswith("/repo"):
            os.chdir(WebUiRequestHandler.REPO_ROOT)
            self.path = self.path[5:]
            handler(self)
        else:
            os.chdir(WebUiRequestHandler.WEB_ROOT)
            handler(self)


    def do_POST(self):
        if self.path == "/git":
            os.chdir(WebUiRequestHandler.REPO_ROOT)
            content_length = int(self.headers["Content-Length"])
            args = codecs.decode(self.rfile.read(content_length), "utf-8")
            cmd = shlex.split("git " + args)
            git = subprocess.Popen(cmd, stdout = subprocess.PIPE, stderr = subprocess.PIPE)
            stdout, stderr = git.communicate()
            if git.returncode == 0:
                http_status = 200
                result = stdout
            else:
                http_status = 500
                result = stderr
            self.send_response(http_status)
            self.send_header("Content-type", "text/plain")
            self.send_header("Content-Length", len(result))
            self.end_headers()
            self.wfile.write(result)
        else:
            self.send_error(404)




if __name__ == '__main__':
    web_root = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(sys.argv[0]))))
    web_root = os.path.join(web_root, "share", "git-webui", "webui")
    WebUiRequestHandler.WEB_ROOT = web_root
    repo_root = os.path.abspath(os.getcwd())

    while '.git' not in os.listdir(repo_root):
        new_root = os.path.dirname(repo_root)
        if new_root == repo_root:
            repo_root = None
            break
        else:
            repo_root = new_root
    if repo_root is None:
        print("No git repository found")
        sys.exit(1)
    WebUiRequestHandler.REPO_ROOT = repo_root

    port = 8000
    httpd = HTTPServer(("", port), WebUiRequestHandler)
    print("Serving at http://localhost:{}/".format(port))
    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        httpd.server_close()
        sys.exit(0)